@model SIL.Web.ViewModels.WebsiteViewModel

@{
    ViewBag.Title = "Edit";
}

<h1>Edit</h1>
<div id="leftPane">
	<nav class="subMenu">
	<h3>Actions</h3>
	</nav>
</div>
<span id="rightPane">
    </span>

<div>
@using (Html.BeginForm("Save", "Website")) {
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>Website</legend>

        <span class="editor-label">
            @Html.LabelFor(model => model.SiteName)
            @Html.EditorFor(model => model.SiteName)
            @Html.ValidationMessageFor(model => model.SiteName)
        </span>

        <span>
            @Html.LabelFor(model => model.WebsitePath)
            @Html.EditorFor(model => model.WebsitePath)
            @Html.ValidationMessageFor(model => model.WebsitePath)
        </span>

        <span>
            @Html.LabelFor(model => model.WebsiteFolder)
            @Html.EditorFor(model => model.WebsiteFolder)
            @Html.ValidationMessageFor(model => model.WebsiteFolder)
        </span>

        <span>
            @Html.LabelFor(model => model.DatabaseName)
            @Html.EditorFor(model => model.DatabaseName)
            @Html.ValidationMessageFor(model => model.DatabaseName)
         </span>

        <span>
            @Html.LabelFor(model => model.Version)
            @Html.EditorFor(model => model.Version)
            @Html.ValidationMessageFor(model => model.Version)
        </span>
        <span>
            @Html.LabelFor(model => model.URL)
            @Html.EditorFor(model => model.URL)
            @Html.ValidationMessageFor(model => model.URL)
        </span>

         <span>
            @Html.LabelFor(model => model.IsActive)
              @Html.EditorFor(model => model.IsActive)
            @Html.ValidationMessageFor(model => model.IsActive)
        </span>

        <span>
            @Html.LabelFor(model => model.DomainControl)
            @Html.EditorFor(model => model.DomainControl)
            @Html.ValidationMessageFor(model => model.DomainControl)
         </span>

        <span>
            @Html.LabelFor(model => model.ServerName)
            @Html.EditorFor(model => model.ServerName)
            @Html.ValidationMessageFor(model => model.ServerName)
        </span>




        <span>
            @Html.LabelFor(model => model.Comments)
            @Html.EditorFor(model => model.Comments)
            @Html.ValidationMessageFor(model => model.Comments)
        </span>

        <span>
            @Html.LabelFor(model => model.Pingdom)
            @Html.EditorFor(model => model.Pingdom)
            @Html.ValidationMessageFor(model => model.Pingdom)
        </span>

                        <span>
            @Html.Label("Customers")          
            @Html.DropDownListFor(model => model.CustomerId , Model.Customers,"--Select--")
        </span>
         <span>      
            @Html.Label("IPs")
            @Html.DropDownListFor(model => model.IpId , Model.Ips,"--Select--")    
        </span>
        <br />

            <fieldset>
        <legend>Support Information</legend>

                        <span>
            @Html.LabelFor(model => model.SupportUsername)
            @Html.EditorFor(model => model.SupportUsername)
            @Html.ValidationMessageFor(model => model.SupportUsername)
        </span>


                <span>
            @Html.LabelFor(model => model.SupportPasswordHash)

   
            @Html.EditorFor(model => model.SupportPasswordHash)
            @Html.ValidationMessageFor(model => model.SupportPasswordHash)

        Show @Html.CheckBox("Example", false, new { onclick = "Show();" })
              </span>

   </fieldset>


        <p>
            <input type="submit" value="Create" />
        </p>
    </fieldset>

}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<script>
    function Show() {
        var show = document.getElementById("Example").checked
        if (show) {
            document.getElementById("SupportPasswordHash").type = 'text';
        }
        else {

            document.getElementById("SupportPasswordHash").type = 'password';
        }
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
</div>